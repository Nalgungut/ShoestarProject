<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoestar.admin.prod.dao.ProdAdminDao">
	
	<!-- 여러 개의 항목을 동시에 수정 -->
	<update id="updateMultiple">
		UPDATE
			prod
		SET
			<trim suffixOverrides="AND">
				<if test="pvo.pct_no != 0">
					pct_no = #{pvo.pct_no} AND
				</if>
				<if test="pvo.pd_status != null"><choose>
					<when test='pvo.pd_status == "null"'>
						pd_status = NULL
					</when>
					<otherwise>
						pd_status = #{pvo.pd_status}
					</otherwise>
				</choose></if>
			</trim>
		WHERE
			pd_no IN
			<foreach collection="pdnos" item="pdno" open="(" close=")" separator=",">
				#{pdno}
			</foreach>
	</update>
	
	<!-- 여러 개의 항목을 동시에 삭제 -->
	<delete id="deleteMultiple">
		DELETE FROM
			prod
		WHERE
			pd_no IN
			<foreach collection="pdnos" item="pdno" open="(" close=")" separator=",">
				#{pdno}
			</foreach>
	</delete>
	
	<!-- 항목 수정 -->
	<update id="updateProd" parameterType="prod">
		UPDATE
			prod
		SET
		<trim suffixOverrides=",">
			<if test="pd_name != null">
				pd_name = #{pd_name},
			</if>
			<if test="pd_sex != null">
				pd_sex = #{pd_sex},
			</if>
			<if test="pd_age != null">
				pd_age = #{pd_age},
			</if>
			<trim suffix=","><choose>
				<when test="pct_no == -1">
					pct_no = NULL
				</when>
				<when test="pct_no == 0"></when>
				<otherwise>
					pct_no = #{pct_no}
				</otherwise>
			</choose></trim>
			<trim suffix=","><choose>
				<when test="co_no == -1">
					co_no = NULL
				</when>
				<when test="co_no == 0"></when>
				<otherwise>
					co_no = #{co_no}
				</otherwise>
			</choose></trim>
			<if test="pd_price != 0">
				pd_price = #{pd_price},
			</if>
			<if test="pd_fabric != null">
				pd_fabric = #{pd_fabric},
			</if>
			<if test="pd_country != null">
				pd_country = #{pd_country},
			</if>
			<if test="pd_year != null">
				pd_year = #{pd_year},
			</if>
			<if test="pd_manu != null">
				pd_manu = #{pd_manu},
			</if>
			<if test="pd_import != null">
				pd_import = #{pd_import},
			</if>
			<trim suffix=","><choose>
				<when test="pi_no == -1">
					pi_no = NULL
				</when>
				<when test="pi_no == 0"></when>
				<otherwise>
					pi_no = #{pi_no}
				</otherwise>
			</choose></trim>
			<if test='pd_status != null and pd_status != ""'><trim suffix=","><choose>
				<when test='pd_status == "null"'>
					pd_status = NULL
				</when>
				<otherwise>
					pd_status = #{pd_status}
				</otherwise>
			</choose></trim></if>
			<if test="pim_main != null"><choose>
				<when test='pim_main == "null"'>
					pim_main = NULL
				</when>
				<otherwise>
					pim_main = #{pim_main}
				</otherwise>
			</choose></if>
		</trim>
		WHERE
			pd_no = #{pd_no}
	</update>
	
	<!-- 항목 입력 -->
	<insert id="insertProd" parameterType="prod">
		<selectKey keyProperty="pd_no" resultType="int" order="BEFORE">
			SELECT
				prod_seq.nextval
			FROM
				DUAL
		</selectKey>
		
		INSERT INTO
			prod(
				pd_no, pd_name, pd_sex, pd_age, pct_no, co_no,	pd_price,
				pd_fabric, pd_country, pd_year, pd_manu, pd_import, pd_status
				)
		VALUES
			<trim prefix="(" suffix=")" suffixOverrides=",">
				${pd_no},
				#{pd_name},
				#{pd_sex},
				#{pd_age},
				<choose><when test="pct_no != 0">#{pct_no},</when><otherwise>NULL,</otherwise></choose>
				<choose><when test="co_no != 0">#{co_no},</when><otherwise>NULL,</otherwise></choose>
				#{pd_price},
				#{pd_fabric},
				#{pd_country},
				#{pd_year},
				#{pd_manu},
				#{pd_import},
				<choose><when test="pd_status != null">#{pd_status}</when><otherwise>NULL</otherwise></choose>
			</trim>
	</insert>
	
	<select id="pimSelect" parameterType="prodimage" resultType="prodimage">
		SELECT
			*
		FROM
			prod_image
		WHERE
			pim_no = #{pim_no}
	</select>
	
	<select id="prodDetailByImage" parameterType="prodimage" resultType="prod">
		SELECT
			p.*
		FROM
			prod p
			INNER JOIN
				prod_ins pi
			ON
				p.pd_no = pi.pd_no
			INNER JOIN
				prod_image pim
			ON pi.pi_no = pim.pi_no
		WHERE
			pim_no = #{pim_no}
	</select>
	
	<update id="updateMainImage">
		UPDATE
			prod
		SET
			pim_main = 
			<choose>
				<when test="pim_file == null">
					null
				</when>
				<otherwise>
					#{pim_file}
				</otherwise>
			</choose>
		WHERE
			pd_no = 
			(
				SELECT
					p.pd_no
				FROM
					prod p
					INNER JOIN
						prod_ins pi
					ON
						p.pd_no = pi.pd_no
					INNER JOIN
						prod_image pim
					ON pi.pi_no = pim.pi_no
				WHERE
					pim_no = #{pim_no}
			)
	</update>
	
	<insert id="pimInsert" parameterType="prodimage">
		INSERT INTO
			prod_image(pim_no, pi_no, pim_priority, pim_file)
		VALUES
			(prod_image_seq.nextval, #{pi_no}, #{pim_priority}, #{pim_file})
	</insert>
	
	<update id="pimUpdate" parameterType="prodimage">
		UPDATE
			prod_image
		SET
			pim_priority = #{pim_priority}
			<if test='pim_file != null and pim_file != ""'>
				, pim_file = #{pim_file}
			</if>
		WHERE
			pim_no = #{pim_no}
	</update>
	
	<delete id="pimDelete" parameterType="prodimage">
		DELETE FROM
			prod_image
		WHERE
			pim_no = #{pim_no}
	</delete>
	
	
	<insert id="insertProdins" parameterType="prodins">
		INSERT INTO
			prod_ins(pi_no, pd_no, pcl_no)
		VALUES
			(prod_ins_seq.nextval, #{pd_no}, #{pcl_no})
	</insert>
	
	<delete id="deleteProdins" parameterType="prodins">
		DELETE FROM
			prod_ins
		WHERE
			pi_no = #{pi_no}
	</delete>
	
	
	<insert id="insertProdStock" parameterType="prodstock">
		INSERT INTO
			prod_stock (pi_no, ps_size, ps_qty)
		VALUES
			(#{pi_no}, #{ps_size}, #{ps_qty})
	</insert>
	
	<update id="updateProdStock" parameterType="prodstock">
		UPDATE
			prod_stock
		SET
			ps_qty = #{ps_qty}
	</update>
	
	<delete id="deleteProdStock">
		DELETE FROM
			prod_stock
		WHERE
			pi_no = #{pi_no} AND
			ps_size = #{ps_size}
	</delete>
</mapper>